{"version":3,"sources":["services/MarkdownFiles/index.js","services/MarkdownFiles/seattleEviction.md","services/MarkdownFiles/rentAssistance.md","components/Address/index.js","services/CurrentFileContext/index.js","components/MarkdownViewer/index.js","services/Content/index.js","components/Search/index.js","scenes/Contribute/index.js","App.js","serviceWorker.js","index.js"],"names":["exports","seattleEviction","require","rentAssistance","module","Address","props","handleScriptLoad","autocomplete","google","maps","places","Autocomplete","document","getElementById","componentRestrictions","country","setFields","addListener","handlePlaceSelect","addressObject","getPlace","address","address_components","county","find","component","types","includes","long_name","console","log","city","setState","query","formatted_address","setCityJurisdiction","setCountyJurisdiction","state","url","onLoad","this","id","placeholder","hintText","value","onChange","target","slice","toLowerCase","style","margin","maxWidth","marginLeft","width","Component","reducer","action","type","currentFile","initialState","undefined","CurrentFileContext","createContext","CurrentFileProvider","children","testState","useReducer","dispatch","Provider","MarkdownViewer","useContext","useState","markdown","setMarkdown","getMarkdown","useCallback","a","fetch","MarkdownFiles","md","text","useEffect","border","borderRadius","content","fileName","title","ShowResults","results","map","item","index","key","onClick","cursor","Search","cityResults","filter","countyResults","searchResults","length","mdParser","MarkdownIt","Contribute","backToSearch","backgroundColor","color","padding","textAlign","textDecoration","fontSize","height","renderHTML","render","html","App","cityJurisdiction","countyJurisdiction","scene","setScene","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9e982260.chunk.js","sourcesContent":["exports.seattleEviction = require('./seattleEviction.md');\r\nexports.rentAssistance = require('./rentAssistance.md');\r\n","module.exports = __webpack_public_path__ + \"static/media/seattleEviction.6cccb1bf.md\";","module.exports = __webpack_public_path__ + \"static/media/rentAssistance.e8081dfb.md\";","// Imports\r\nimport React, { Component } from 'react';\r\n\r\n// Import React Scrit Libraray to load Google object\r\nimport Script from 'react-load-script';\r\n\r\nclass Address extends Component {\r\n    // Define Constructor\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Declare State\r\n        this.state = {\r\n            city: '',\r\n            county: '',\r\n            query: '',\r\n        };\r\n    }\r\n\r\n    handleScriptLoad = () => {\r\n        // Declare Options For Autocomplete\r\n        const options = {\r\n            // types: ['(cities)'],\r\n            componentRestrictions: { country: 'us' },\r\n        }; // To disable any eslint 'google not defined' errors\r\n\r\n        // Initialize Google Autocomplete\r\n        /*global google*/ this.autocomplete = new google.maps.places.Autocomplete(\r\n            document.getElementById('autocomplete'),\r\n            options\r\n        );\r\n\r\n        // Avoid paying for data that you don't need by restricting the set of\r\n        // place fields that are returned to just the address components and formatted\r\n        // address.\r\n        this.autocomplete.setFields([\r\n            'address_components',\r\n            'formatted_address',\r\n        ]);\r\n\r\n        // Fire Event when a suggested name is selected\r\n        this.autocomplete.addListener('place_changed', this.handlePlaceSelect);\r\n    };\r\n\r\n    handlePlaceSelect = () => {\r\n        // Extract City From Address Object\r\n        const addressObject = this.autocomplete.getPlace();\r\n        const address = addressObject.address_components;\r\n\r\n        //this could be done a little better\r\n        const county = address.find((component) =>\r\n            component?.types?.includes('administrative_area_level_2')\r\n        )?.long_name;\r\n\r\n        console.log(address);\r\n        const city = address.find((component) =>\r\n            component?.types?.includes('locality')\r\n        )?.long_name;\r\n\r\n        // Check if address is valid\r\n        if (address) {\r\n            // Set State\r\n            this.setState({\r\n                city,\r\n                county,\r\n                query: addressObject.formatted_address,\r\n            });\r\n\r\n            this.props.setCityJurisdiction(city);\r\n            this.props.setCountyJurisdiction(county);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span>\r\n                <Script\r\n                    url=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDSBzpWCoKDndCryxQTsNcpZMfMVEGO4bA&libraries=places\"\r\n                    onLoad={this.handleScriptLoad}\r\n                />\r\n                <input\r\n                    id=\"autocomplete\"\r\n                    placeholder=\"\"\r\n                    hintText=\"Search City\"\r\n                    value={this.state.query}\r\n                    onChange={({ target }) => {\r\n                        let query = target.value;\r\n                        !query?.slice(-3)?.toLowerCase()?.includes('wa') &&\r\n                            (query += ' wa');\r\n                        this.setState({ ...this.state, query: target.value });\r\n                    }}\r\n                    style={{\r\n                        margin: '0 auto',\r\n                        maxWidth: 800,\r\n                        marginLeft: 10,\r\n                        width: 500,\r\n                    }}\r\n                />\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Address;\r\n","import React, { createContext, useReducer } from 'react';\r\n\r\n//the reducer handles actions\r\nexport const reducer = (state, action) => {\r\n    //switch statement looks at the action type\r\n    //if there is a case that matches the type it will run that code\r\n    //otherwise it will run the default case\r\n    switch (action.type) {\r\n        case 'setCurrentFile': {\r\n            //get the question from the action\r\n            const { currentFile } = action;\r\n            console.log(`setting current file`, currentFile);\r\n            return {\r\n                ...state,\r\n                currentFile,\r\n            };\r\n        }\r\n        //default case returns the previous state without changing it\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//the object that we use to make the first Context\r\nexport const initialState = {\r\n    currentFile: undefined,\r\n};\r\n\r\nconst CurrentFileContext = createContext(initialState);\r\n\r\nconst CurrentFileProvider = ({ children, testState }) => {\r\n    const [state, dispatch] = useReducer(\r\n        reducer,\r\n        testState ? testState : initialState\r\n    );\r\n\r\n    const value = { ...state, dispatch };\r\n\r\n    return (\r\n        <CurrentFileContext.Provider value={value}>\r\n            {children}\r\n        </CurrentFileContext.Provider>\r\n    );\r\n};\r\n\r\nexport { CurrentFileContext, CurrentFileProvider };\r\n","import React, { useCallback, useEffect, useState, useContext } from 'react';\r\nimport Markdown from 'markdown-to-jsx';\r\nimport { CurrentFileContext } from '../../services/CurrentFileContext';\r\nimport MarkdownFiles from '../../services/MarkdownFiles';\r\n\r\nconst MarkdownViewer = () => {\r\n    const { currentFile } = useContext(CurrentFileContext);\r\n    const [markdown, setMarkdown] = useState('');\r\n\r\n    // const dispense = React.useCallback(candy => {\r\n    //     setCandies(allCandies => allCandies.filter(c => c !== candy))\r\n    //   }, [])\r\n    //   Here's the original again:\r\n\r\n    //   const dispense = candy => {\r\n    //     setCandies(allCandies => allCandies.filter(c => c !== candy))\r\n    //   }\r\n\r\n    const getMarkdown = useCallback(async (currentFile) => {\r\n        const md = await fetch(MarkdownFiles[currentFile]);\r\n\r\n        const markdown = await md.text();\r\n        setMarkdown(markdown);\r\n    }, []);\r\n\r\n    // const getMarkdown = async () => {\r\n    //     const md = await fetch(MarkdownFiles[currentFile]);\r\n\r\n    //     const markdown = await md.text();\r\n    //     setMarkdown(markdown);\r\n    // };\r\n\r\n    useEffect(() => {\r\n        currentFile && getMarkdown(currentFile);\r\n    }, [currentFile, getMarkdown]);\r\n\r\n    return (\r\n        markdown && (\r\n            <div\r\n                style={{\r\n                    border: 'thick solid',\r\n                    borderRadius: 20,\r\n                    marginLeft: 200,\r\n                    width: 800,\r\n                }}\r\n            >\r\n                <Markdown>{markdown}</Markdown>;\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default MarkdownViewer;\r\n","const seattleInfo = {\r\n    city: 'Seattle',\r\n    content: 'Seattle has prohibited evictions during covid19.',\r\n    fileName: 'seattleEviction',\r\n    title: 'Helpful information about Seattle laws',\r\n};\r\n\r\nconst kingCountyInfo = {\r\n    county: 'King County',\r\n    content:\r\n        'King County has rent assistance programs. Call 206-283-1212 for more information',\r\n    fileName: 'rentAssistance',\r\n    title: 'Information about KC Rent Assistance',\r\n};\r\n\r\nconst islandCountyInfo = {\r\n    county: 'Island County',\r\n    content:\r\n        'The island county sherriff will not enforce eviction orders unless there is an immediate threat to the health and safety of other tenants',\r\n    title: 'Sherriff practice',\r\n};\r\n\r\nconst pierceCountyInfo = {\r\n    county: 'Pierce',\r\n    content:\r\n        'Pierce county has a housing justice project. Help is available on a walk-in basis.',\r\n    title: 'Pierce HJP',\r\n};\r\n\r\nconst content = [\r\n    seattleInfo,\r\n    kingCountyInfo,\r\n    islandCountyInfo,\r\n    pierceCountyInfo,\r\n];\r\n\r\nexport default content;\r\n","import React, { useContext } from 'react';\r\nimport content from '../../services/Content';\r\nimport { CurrentFileContext } from '../../services/CurrentFileContext';\r\n\r\nconst searchResults = ({ city, county }) => {\r\n    const cityResults = content.filter(\r\n        (item) => item.city && item.city === city\r\n    );\r\n    const countyResults = content.filter(\r\n        (item) => item.county && item.county === county\r\n    );\r\n\r\n    return {\r\n        cityResults,\r\n        countyResults,\r\n    };\r\n};\r\n\r\nconst ShowResults = ({ results }) => {\r\n    const { dispatch } = useContext(CurrentFileContext);\r\n\r\n    return (\r\n        <div>\r\n            {results.map((item, index) => (\r\n                <div\r\n                    key={index}\r\n                    style={{\r\n                        border: 'thin solid',\r\n                    }}\r\n                >\r\n                    <h1\r\n                        onClick={() =>\r\n                            dispatch({\r\n                                type: 'setCurrentFile',\r\n                                currentFile: item.fileName,\r\n                            })\r\n                        }\r\n                        style={{ cursor: 'pointer' }}\r\n                    >\r\n                        {item.title}\r\n                    </h1>\r\n                    {item.content}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Search = ({ city, county }) => {\r\n    const { cityResults, countyResults } = searchResults({ city, county });\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                border: 'thick solid',\r\n                marginLeft: 200,\r\n                width: 800,\r\n            }}\r\n        >\r\n            <div>\r\n                {cityResults.length ? (\r\n                    <ShowResults results={cityResults} />\r\n                ) : (\r\n                    <div>No results found for city {city}</div>\r\n                )}\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <div>\r\n                {countyResults.length ? (\r\n                    <ShowResults results={countyResults} />\r\n                ) : (\r\n                    <div>No results found for county {county}</div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","// import react, react-markdown-editor-lite, and a markdown parser you like\r\nimport * as React from 'react';\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite';\r\n// import style manually\r\nimport 'react-markdown-editor-lite/lib/index.css';\r\n\r\n// Register plugins if required\r\n// MdEditor.use(YOUR_PLUGINS_HERE);\r\n\r\n// Initialize a markdown parser\r\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\r\n\r\n// Finish!\r\nconst Contribute = ({ backToSearch }) => {\r\n    function handleEditorChange({ html, text }) {\r\n        console.log('handleEditorChange', html, text);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                maxWidth: 1000,\r\n                marginLeft: 200,\r\n            }}\r\n        >\r\n            Got information to add? Use this markdown editor to write your\r\n            contribution.\r\n            <br />\r\n            <button\r\n                onClick={() => backToSearch()}\r\n                style={{\r\n                    backgroundColor: 'green',\r\n                    border: 'none',\r\n                    borderRadius: 10,\r\n                    color: 'white',\r\n                    padding: '15px 32px',\r\n                    textAlign: 'center',\r\n                    textDecoration: 'none',\r\n                    fontSize: 16,\r\n                    margin: '4px 2px',\r\n                    cursor: 'pointer',\r\n                }}\r\n            >\r\n                Back to Search Page\r\n            </button>\r\n            <MdEditor\r\n                value=\"Your text goes here\"\r\n                style={{ height: '500px' }}\r\n                renderHTML={(text) => mdParser.render(text)}\r\n                onChange={handleEditorChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default Contribute;\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Address from './components/Address';\nimport MarkdownViewer from './components/MarkdownViewer';\nimport SearchResults from './components/Search';\nimport { CurrentFileProvider } from './services/CurrentFileContext';\nimport Contribute from './scenes/Contribute';\n\nconst App = () => {\n    const [cityJurisdiction, setCityJurisdiction] = useState('');\n    const [countyJurisdiction, setCountyJurisdiction] = useState('');\n\n    const [scene, setScene] = useState('');\n\n    return (\n        <CurrentFileProvider>\n            <div>\n                <h1 style={{ marginLeft: 100 }}>\n                    Washington Legal Info Search\n                </h1>\n                {scene === 'contribute' ? (\n                    <Contribute backToSearch={() => setScene('')} />\n                ) : (\n                    <div>\n                        <p style={{ marginLeft: 200 }}>\n                            Do you have valuable information that people need to\n                            know? <br />\n                            <button\n                                onClick={() => setScene('contribute')}\n                                style={{\n                                    backgroundColor: 'green',\n                                    border: 'none',\n                                    borderRadius: 10,\n                                    color: 'white',\n                                    padding: '15px 32px',\n                                    textAlign: 'center',\n                                    textDecoration: 'none',\n                                    fontSize: 16,\n                                    margin: '4px 2px',\n                                    cursor: 'pointer',\n                                }}\n                            >\n                                Add your info!\n                            </button>\n                        </p>\n                        <div style={{ marginLeft: 200 }}>\n                            <h2>\n                                Your address:\n                                <Address\n                                    setCityJurisdiction={setCityJurisdiction}\n                                    setCountyJurisdiction={\n                                        setCountyJurisdiction\n                                    }\n                                />\n                            </h2>\n                        </div>\n                        <div style={{ marginLeft: 200 }}>\n                            <h1>Jurisdiction</h1>\n                            <h2>City: {cityJurisdiction}</h2>\n                            <h2>County: {countyJurisdiction}</h2>\n                        </div>\n\n                        <br />\n                        <br />\n                        <SearchResults\n                            city={cityJurisdiction}\n                            county={countyJurisdiction}\n                        />\n                        <br />\n                        <br />\n                        <MarkdownViewer />\n                    </div>\n                )}\n            </div>\n        </CurrentFileProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}